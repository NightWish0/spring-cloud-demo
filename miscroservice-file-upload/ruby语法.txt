语法：

1、BEGIN{
     # to do ....
   }
声明code会在程序运行之前被调用（相当于静态代码块）

   END{
    # to do ....
   }
声明code会在程序的结尾被调用

2、注释
1）#
2）=begin/=end  用于多行注释，类似 /**/

3、数据类型
1）Number （下划线字符在数字字符串中被忽略）
--Integer 整型
--float 浮点型
2) String
3) Ranges
4) Symbols
5) true / false
6) nil

4、算术操作[+、-、*、/、**（指数算术）]

5、字符串类型
双引号标记的字符串允许替换和使用反斜线符号（需要转义）
单引号标记的字符串不允许替换，且只允许使用 \\ 和 \' 两个反斜线符号。

6、序列#{ 2*5（任意表达式） }

7、数组
（1）数组通过[]索引访问
（2）通过赋值操作插入、删除、替换元素
（3）通过+，－号进行合并和删除元素，且集合做为新集合出现
（4）通过<<号向原数据追加元素
（5）通过*号重复数组元素
（6）通过｜和&符号做并集和交集操作（注意顺序）

8、hash类型（哈希是在大括号内放置一系列键/值对，键和值之间使用逗号和序列 => 分隔。尾部的逗号会被忽略）

9、范围类型
一个范围表示一个区间。
范围是通过设置一个开始值和一个结束值来表示。
范围可使用 s..e 和 s...e 来构造，或者通过 Range.new 来构造。
使用 .. 构造的范围从开始值运行到结束值（包含结束值）。
使用 ... 构造的范围从开始值运行到结束值（不包含结束值）。
当作为一个迭代器使用时，范围会返回序列中的每个值。
范围 (1..5) 意味着它包含值 1, 2, 3, 4, 5，范围 (1...5) 意味着它包含值 1, 2, 3, 4 。

10、变量
局部变量：局部变量是在方法中定义的变量。局部变量在方法外是不可用的。在后续的章节中，您将看到有关方法的更多细节。局部变量以小写字母或 _ 开始。
实例变量：实例变量可以跨任何特定的实例或对象中的方法使用。这意味着，实例变量可以从对象到对象的改变。实例变量在变量名之前放置符号（@）。
类变量：类变量可以跨不同的对象使用。类变量属于类，且是类的一个属性。类变量在变量名之前放置符号（@@）。
全局变量：类变量不能跨类使用。如果您想要有一个可以跨类使用的变量，您需要定义全局变量。全局变量总是以美元符号（$）开始。
























